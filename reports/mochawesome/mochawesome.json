{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2020-03-25T09:52:34.420Z",
    "end": "2020-03-25T09:52:35.708Z",
    "duration": 1288,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "fbcafa4d-b40f-4eec-8ca3-c247d6e78319",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "8ffd8c74-3a37-4948-8c53-f9cf07059753",
        "title": "OMDB Movie List",
        "fullFile": "E:\\Fian\\CV\\Ralali\\Automation\\poc-mocha-chai\\api\\test\\movie-list-test.js",
        "file": "\\api\\test\\movie-list-test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "@get ${testCase.positive.getList}",
            "fullTitle": "OMDB Movie List @get ${testCase.positive.getList}",
            "timedOut": false,
            "duration": 288,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(200);\n   //   console.log(testCase.positive.getList);",
            "err": {},
            "isRoot": false,
            "uuid": "f5d8d39a-62cb-456c-95eb-18e7e20176ea",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get ${testCase.negative.noSearch}",
            "fullTitle": "OMDB Movie List @get ${testCase.negative.noSearch}",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, '');\nassert(response.status).to.equal(200, response.body.Error);\nassert(response.body.Response).to.equal('False');",
            "err": {},
            "isRoot": false,
            "uuid": "ef475738-b9a5-4d63-9dd3-c7d0ad3111ad",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get ${testCase.negative.invalidApiKey}",
            "fullTitle": "OMDB Movie List @get ${testCase.negative.invalidApiKey}",
            "timedOut": false,
            "duration": 512,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(invalidApiKey, keySearch);\nassert(response.status).to.equal(401, response.body.Error);\nassert(response.body.Response).to.equal('False');\nassert(response.body.Error).to.equal('Invalid API key!');",
            "err": {},
            "isRoot": false,
            "uuid": "369e6984-04d0-4642-a978-be30ba5d7beb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get ${testCase.negative.notfoundSearch}",
            "fullTitle": "OMDB Movie List @get ${testCase.negative.notfoundSearch}",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, notfoundSearch);\nassert(response.status).to.equal(200, response.body.Error);\nassert(response.body.Response).to.equal('False');\nassert(response.body.Error).to.equal('Movie not found!');",
            "err": {},
            "isRoot": false,
            "uuid": "a6e9e117-03d8-4d07-ab57-03e19c307e5c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get ${testCase.negative.specialCharSearch}",
            "fullTitle": "OMDB Movie List @get ${testCase.negative.specialCharSearch}",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, specialCharSearch);\nassert(response.status).to.equal(200, response.body.Error);\nassert(response.body.Response).to.equal('False');\nassert(response.body.Error).to.equal('Too many results.');",
            "err": {},
            "isRoot": false,
            "uuid": "3d84fc10-452f-4877-8589-05e218a00c48",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f5d8d39a-62cb-456c-95eb-18e7e20176ea",
          "ef475738-b9a5-4d63-9dd3-c7d0ad3111ad",
          "369e6984-04d0-4642-a978-be30ba5d7beb",
          "a6e9e117-03d8-4d07-ab57-03e19c307e5c",
          "3d84fc10-452f-4877-8589-05e218a00c48"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 918,
        "root": false,
        "rootEmpty": false,
        "_timeout": 180000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 180000
  },
  "copyrightYear": 2020
}